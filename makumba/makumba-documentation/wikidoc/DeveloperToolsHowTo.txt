[{TableOfContents }]

Makumba comes with a number of convenient developer tools.
Those tools can be enabled or disabled at will (one might not want e.g. the data query tool to be enabled in a production environment) in the [configuration|MakumbaConfiguration#section-MakumbaConfiguration-MakumbaTools] file. The default location is under /mak-tools but this can be also changed if wished.\\
In addition to the list below, more tools are expected to be developed in the future, allowing e.g. to clean up database columns not used anymore or to migrate the data when doing data structure refactoring (e.g. when moving from a pointer to set). 


!!! Code Viewers

!! JSP Viewer
The JSP code viewer comes with handy highlighting of JSP, JSTL and of course Makumba tags. It also provides convenient links to the data definitions used in the page, to the logic discovery (identifying matching business logic files) as well as to the version history of this particular file.\\

[{Box

By default the JSP viewer can be accessed by using the .jspx extension on any JSP page
}]

!! Data Definition Viewer
The data definition viewer allows to easily check the fields available in a given entity and the history of the changes. When a data definition contains references to other entities, links to the corresponding data definitions are provided, making it very easy to navigate from an entity to the other.
When adding new data definitions, the data definition viewer also indicates syntax errors, if any, making it easy to spot and correct any issue.\\
The data definition viewer is also able to provide the list of JSP and Java files in which the entity is used, which comes handy when assessing the impact of a data structure change. For this list of relations to be available, one needs however to run the relation crawler first (located by default under /mak-tools/relationCrawler). 

[{Box

It is most common to access the data definition viewer from the JSP viewer, but it can also be accessed from (default) /mak-tools/dataDefinitions/ 
}]

!! Java Viewer
The java viewer comes with handy highlighting and links to the classes, methods and data definitions used. As for the JSP and MDD viewers, the version history is only one click away.

[{Box

It is most common to access the java viewer from the JSP viewer and its logic discovery, but it can also be accessed from (default) /mak-tools/classes/ 
}]

!!! Code Generator

For quick prototyping, code can be automatically generated from the data definitions. The code generator is available (when enabled) from the data definition viewer and will generate the code for creation, view, list, edition and deletion of the entity. Templates can be defined to refine the output.

!!! Data Tools 

!! Data Query Tool
The data query tool allows the developer to run any SELECT queries using MQL (Makumba Query Language) or HQL (Hibernate Query Language). It dramatically eases the checking of the data contained in the DB, especially when joining across several tables is involved.\\
Besides the actual output of the query, the corresponding SQL is also given.

!! Object Viewer
The object viewer returns, for a given object (e.g. result of the data query tool), the values of all its fields. 

!! Data Lister
The data lister returns the data from a given entity.

!! Pointer Value Converter
Makumba refers primarily to objects using their so called internal form (DBSV:UID) and external form (7 alphanumeric characters) pointers. A record has also a third ID, namely its actual database value. The pointer value converter provides the translation between those 3 identifiers.

!! Reference Checker
The reference checker looks at foreign and unique keys and displays broken references.

!! Error Log Viewer
If the error logging to the database is activated (see the [configuration|Configuration#MakumbaConfiguration-MakumbaToolsConfigurationMakumbaToolConfig]), you can use this tool in order to display the error log and get an idea of what errors the users of your application see.

%%(display:none;)[Category Usage]%%
