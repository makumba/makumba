INSTALLATION INSTRUCTIONS
=========================

- install maven (http://maven.apache.org/download.html)

== eclipse set-up

1) Prepare eclipse for maven
   =========================
- install m2eclipse (http://m2eclipse.sonatype.org/sites/m2e/)
- install m2eclipse-extras (http://m2eclipse.sonatype.org/sites/m2e-extras/)
  - only install the "Project configurators for some commonly used maven plugins" (without the "Maven Integration for WTP" as it is buggy for the moment)
- go to the eclipse maven preferences (Window->Preferences->Maven) and:
  - in "Installations", add your maven installation instead of the embedded one (http://www.sonatype.com/books/m2eclipse-book/reference/eclipse-sect-maven-preferences.html)
  - in "Maven" (main view) add the following goals for the fields "Goals to run on project import" and "Goals to run when updating the project configuration":
    process-resources process-test-resources

2) Prepare eclipse for a green build with makumba
   ================================================
- go to Window->Preference->Validators and select "Suspend all validators" (or remove the validators you don't want to use, e.g. JSP, HTML, ...).
  This is necessary because the JSP, HTML and EL validators are partly broken and can get very annoying

3) Prepare & checkout makumba (https://makumba.svn.sourceforge.net/svnroot/makumba)
   ==========================
- create empty makumba and makhib mysql test databases in mysql; on linux, you can use the "setup-mysql-db.sh" script
- if needed, configure makumba-parent/build.properties
  - this is important especially when releasing, where you need to have the makumba-documentation project checked out somewhere
    in order to generate documented TLDs
- checkout the project, either through command-line or directly through File->New->Other->Maven->Checkout maven project from SCM (untested).
  In the latter case, you don't need to re-import it again (skip the following step)
- go to File->Import->Existing maven projects and select the makumba project directory.
- if you installed the Maven WTP extensions, you will get a NullPointerException during import due to https://issues.sonatype.org/browse/MECLIPSEWTP-41.
  You have two options:
  - uninstall the Maven WTP extensions (if you don't plan on using them with other maven projects) and re-iterate the import process
  - right-click on makumba-jsp-test and select Maven->Disable Workspace Resolution. This should lead to a clean build.

4) Use makumba-core with a WTP project in eclipse Helios
   =====================================================
- in order to use makumba directly as a dependency in a WTP project, go to the project properties->Deployment Assembly->Add->Project and add makumba-core

In order to run the test webapp:
- right-click on makumba-jsp-test and go to Run As -> Maven build...
- in the Goals field, enter 'jetty:run' for Jetty or 'tomcat:run' for Tomcat. Note that only Jetty supports hot-redeploy in this set-up.

(TODO: instructions on how to import the code formatting & cleanup templates)

track https://issues.sonatype.org/browse/MECLIPSEWTP-41


== IntelliJ IDEA set-up

- create empty makumba and makhib mysql test databases in mysql; on linux, you can use the "setup-mysql-db.sh" script
- check out the project, don't let it be imported right away
- if needed, configure build.properties
- create a new project from the maven model based on the sources you checked out (select the makumba-parent directory)
